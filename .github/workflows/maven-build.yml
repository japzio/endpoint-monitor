# This workflow will build a Java project with Maven, run tests, and cache dependencies
# It triggers on pull requests targeting develop or master branches
# For more information: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Maven Build on PR

on:
  pull_request:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17  # Adjust version if your project uses a different JDK (e.g., 21 for Spring Boot 3.x)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven  # Caches Maven dependencies to speed up subsequent runs

      - name: Build with Maven
        run: mvn -B clean install --file pom.xml  # Or use 'mvn -B package' if you don't need full install/tests; add -DskipTests if tests are run separately

      # Optional: Upload test results or artifacts for debugging PRs
      - name: Upload test results
        if: always()  # Runs even if build fails
        uses: actions/upload-artifact@v4
        with:
          name: maven-test-results
          path: target/surefire-reports/  # Adjust path based on your Maven output

      # Optional: Update dependency graph for Dependabot alerts
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6